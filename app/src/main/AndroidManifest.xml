<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android">
    <!--
         The ACCESS_COARSE/FINE_LOCATION permissions are not required to use
         Google Maps Android API v2, but you must specify either coarse or fine
         location permissions for the 'MyLocation' functionality. 
    -->
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>
    <!-- Needed only if your app targets Android 5.0 (API level 21) or higher.
     https://developer.android.com/guide/topics/location/strategies -->
    <uses-feature android:name="android.hardware.location.gps" android:required="false" />
    <!--
         osmdroid requires certain permissions in the Android project manifest
         to perform correctly.
         https://github.com/osmdroid/osmdroid/wiki/Prerequisites
    -->
    <!-- Si pido fine y coarse, el sistema elige el mejor https://stackoverflow.com/a/32307347/3369131 -->
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />

    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE"/>
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
    <uses-permission android:name="android.permission.INTERNET"/>

    <!-- To use ExternalPreferredCacheDiskCacheFactory to store Glide’s cache on the public sdcard,
     you’ll need to use the WRITE_EXTERNAL_STORAGE permission instead:
      https://bumptech.github.io/glide/doc/download-setup.html#local-storage
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />-->

    <application
            android:allowBackup="true"
            android:icon="@mipmap/ic_launcher"
            android:label="@string/app_name"
            android:roundIcon="@mipmap/ic_launcher_round"
            android:supportsRtl="true"
            android:theme="@style/AppTheme">
        <!-- If you are using com.google.android.gms:play-services-maps:16.0.0 or below and your app is targeting
             API level 28 (Android 9.0) or above, you must include the following declaration
             https://developers.google.com/maps/documentation/android-sdk/config -->
        <uses-library
            android:name="org.apache.http.legacy"
            android:required="false" />
        <meta-data
            android:name="com.google.android.gms.version"
            android:value="@integer/google_play_services_version" />

        <activity
                android:name=".MainActivity"
                android:label="@string/title_fragment_oldays_map"
                android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>

                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
        </activity>
        <!--
             The API key for Google Maps-based APIs is defined as a string resource.
             (See the file "res/values/google_maps_api.xml").
             Note that the API key is linked to the encryption key used to sign the APK.
             You need a different API key for each encryption key, including the release key that is used to
             sign the APK for publishing.
             You can define the keys for the debug and release targets in src/debug/ and src/release/. 
        -->
        <meta-data
                android:name="com.google.android.geo.API_KEY"
                android:value="@string/google_maps_key"/>
<!--
        <activity
                android:name=".Mapa"
                android:label="@string/title_activity_mapa">
        </activity>-->
    </application>

</manifest>